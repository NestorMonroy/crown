{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { fir } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/nestormonroy/Documents/Projects/crown/src/redux/shop/shop.sagas.js"],"names":["takeEvery","fir","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoB,+BAApB;AACA,SAASC,uBAAT,EACAC,uBADA,QAC+B,gBAD/B;AAGA,OAAOC,eAAP,MAA4B,cAA5B;AAIA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEAF,EAAAA,aAAa,CACVG,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAG,IAAAA,QAAQ,CAACd,uBAAuB,CAACY,cAAD,CAAxB,CAAR;AACD,GALH,EAMGG,KANH,CAMSC,KAAK,IAAIF,QAAQ,CAACb,uBAAuB,CAACe,KAAK,CAACC,OAAP,CAAxB,CAN1B;AAQH;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMpB,SAAS,CACXI,eAAe,CAACiB,uBADL,EAEXhB,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects'\nimport { fir } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess,\nfetchCollectionsFailure } from './shop.actions'\n\nimport ShopActionTypes from './shop.types'\n\n\n\nexport function* fetchCollectionsAsync(){\n    yield console.log('I am fired');\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef\n      .get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync\n    );\n}"]},"metadata":{},"sourceType":"module"}