{"ast":null,"code":"var _jsxFileName = \"/home/nestormonroy/Documents/Projects/crown/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selector';\nconst CollectionsOverviewWithSpiner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpiner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      selectIsCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpiner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpiner, Object.assign({\n        isLoading: selectIsCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsCollectionFetching,\n  isCollllectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/nestormonroy/Documents/Projects/crown/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","WithSpinner","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","CollectionsOverviewWithSpiner","CollectionPageWithSpiner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","isFetching","isCollllectionLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAAQC,0BAAR,EAAqCC,wBAArC,QAAoE,gCAApE;AAGA,MAAMC,6BAA6B,GAAGN,WAAW,CAACC,mBAAD,CAAjD;AACA,MAAMM,wBAAwB,GAAGP,WAAW,CAACE,cAAD,CAA5C;;AAEA,MAAMM,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAAEP,MAAAA;AAAF,QAAiC,KAAKQ,KAA5C;AACAR,IAAAA,0BAA0B;AAC3B;;AAEDS,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,oBAAR;AAA8BT,MAAAA;AAA9B,QAA0D,KAAKM,KAArE;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAoEH,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,wBAAD;AAA0B,QAAA,SAAS,EAAEN;AAArC,SAAmEM,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADA;AAeD;;AAvBoC;;AA0BvC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC/CkB,EAAAA,UAAU,EAAEb,0BADmC;AAE/Cc,EAAAA,oBAAoB,EAAEb;AAFyB,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n\nimport CollectionPage from '../collection/collection.component';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport {selectIsCollectionFetching , selectIsCollectionLoaded} from '../../redux/shop/shop.selector';\n\n\nconst CollectionsOverviewWithSpiner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpiner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount(){\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync()\n  }\n\n  render(){\n    const {match, isCollectionFetching, selectIsCollectionLoaded} = this.props;\n    return(\n    <div className='shop-page'>\n      <Route \n        exact \n        path={`${match.path}`} \n        render={(props) => (\n          <CollectionsOverviewWithSpiner isLoading={isCollectionFetching} {...props} />\n        )} />\n      <Route \n        path={`${match.path}/:collectionId`} \n        render={(props) =>(\n          <CollectionPageWithSpiner isLoading={selectIsCollectionLoaded} {...props} />\n        )} />\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsCollectionFetching,\n  isCollllectionLoaded: selectIsCollectionLoaded\n})\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}