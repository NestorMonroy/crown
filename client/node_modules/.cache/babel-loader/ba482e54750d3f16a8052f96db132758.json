{"ast":null,"code":"var _jsxFileName = \"/home/nestormonroy/Documents/Projects/crown/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nconst CollectionsOverviewWithSpiner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpiner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); //console.log(collectionsMap);\n\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loadding\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpiner, Object.assign({\n        isLoadding: loadding\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 62\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/nestormonroy/Documents/Projects/crown/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","WithSpinner","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverviewWithSpiner","CollectionPageWithSpiner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","loadding","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAGA,MAAMC,6BAA6B,GAAGN,WAAW,CAACC,mBAAD,CAAjD;AACA,MAAMM,wBAAwB,GAAGP,WAAW,CAACE,cAAD,CAA5C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACNC,MAAAA,OAAO,EAAC;AADF,KAF4B;AAAA,SAMpCC,uBANoC,GAMV,IANU;AAAA;;AAQpCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACR,MAAAA;AAAD,QAAsB,KAAKS,KAAjC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD,CADyC,CAEzC;;AACAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAC;AAAT,OAAd;AACD,KALD;AAOD;;AAGDU,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,UAAM;AAACS,MAAAA;AAAD,QAAa,KAAKb,KAAxB;AAEA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGV,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,UAAU,EAAES;AAA3C,SAAyDT,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGV,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA;AAMD;;AAhCmC;;AAmCtC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,iBAAiB,EAAEc,cAAc,IAAIO,QAAQ,CAACrB,iBAAiB,CAACc,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n\nimport CollectionPage from '../collection/collection.component';\n\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\n\nconst CollectionsOverviewWithSpiner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpiner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component{\n\n  state = {\n    loading:true\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount(){\n    const {updateCollections} = this.props;\n    const collectionRef = firestore.collection('collections');\n  \n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      //console.log(collectionsMap);\n      updateCollections(collectionsMap);\n      this.setState({loading:false});\n    });\n\n  }\n\n\n  render(){\n    const {match} = this.props;\n    const {loadding} = this.state;\n\n    return(\n    <div className='shop-page'>\n      <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpiner isLoadding={loadding} {...props} />  } />\n      <Route path={`${match.path}/:collectionId`} render={(props) } />\n    </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}