{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTYpes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const user = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    })); //console.log(user)\n  } catch (e) {\n    yield put(googleSignInFailure(e));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    console.log(user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(emailSignInFailure(e));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTYpes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTYpes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/nestormonroy/Documents/Projects/crown/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTYpes","signInSuccess","signInFailure","signInWithGoogle","user","auth","signInWithPopup","googleProvider","userRef","createUserProfileDocument","userSnapshot","get","googleSignInSuccess","id","data","e","googleSignInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","console","log","emailSignInSuccess","emailSignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACIC,aADJ,EAEIC,aAFJ,QAGO,gBAHP;AAKA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMC,IAAI,CAACC,eAAL,CAAqBC,cAArB,CAAnB;AACA,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACU,yBAAD,EAA4BL,IAA5B,CAA1B;AACA,UAAMM,YAAY,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACe,mBAAmB,CAAC;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CAApB,CAAT,CAJA,CAKA;AACH,GAND,CAME,OAAOC,CAAP,EAAU;AACR,UAAMlB,GAAG,CAACmB,mBAAmB,CAACD,CAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAC/D,MAAI;AACA,UAAM;AAAEhB,MAAAA;AAAF,QAAW,MAAMC,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMZ,OAAO,GAAG,MAAMT,IAAI,CAACU,yBAAD,EAA4BL,IAA5B,CAA1B;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AAEA,UAAMM,YAAY,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA3B;AACA,UAAMd,GAAG,CACL2B,kBAAkB,CAAC;AAACX,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAlB;AAAsB,SAAGH,YAAY,CAACI,IAAb;AAAzB,KAAD,CADb,CAAT;AAGH,GATD,CASE,OAAOC,CAAP,EAAU;AACR,UAAMlB,GAAG,CAAC4B,kBAAkB,CAACV,CAAD,CAAnB,CAAT;AACH;AACF;AAGH,OAAO,UAAUW,mBAAV,GAAgC;AACnC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,oBAAjB,EAAuCxB,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUyB,kBAAV,GAA+B;AAClC,QAAMhC,UAAU,CAACI,eAAe,CAAC6B,mBAAjB,EAAsCZ,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUa,SAAV,GAAqB;AAC3B,QAAMhC,GAAG,CAAC,CACNC,IAAI,CAAC2B,mBAAD,CADE,EAEN3B,IAAI,CAAC6B,kBAAD,CAFE,CAAD,CAAT;AAIA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTYpes from './user.types';\nimport { \n    signInSuccess, \n    signInFailure,  \n} from './user.actions';\n\nexport function* signInWithGoogle(){\n    try {\n        const user = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}))\n        //console.log(user)\n    } catch (e) {\n        yield put(googleSignInFailure(e));\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user);\n        console.log(user);\n\n        const userSnapshot = yield userRef.get();\n        yield put(\n            emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data() })\n        )\n    } catch (e) {\n        yield put(emailSignInFailure(e))\n    }\n  }\n  \n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTYpes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTYpes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas(){\n yield all([\n     call(onGoogleSignInStart), \n     call(onEmailSignInStart) \n    ])\n}"]},"metadata":{},"sourceType":"module"}