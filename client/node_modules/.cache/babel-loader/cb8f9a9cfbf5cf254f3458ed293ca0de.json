{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(collectionsMap));\n  }\n  /*   collectionRef\n      .get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message))); */\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/nestormonroy/Documents/Projects/crown/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AACA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,MAAG;AACC,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAI,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAlC;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACH;AAIH;;;;;;;;AAQD;AAED,OAAO,UAAUE,qBAAV,GAAiC;AACpC,QAAMf,SAAS,CACXO,eAAe,CAACS,uBADL,EAEXR,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\nimport { \n    fetchCollectionsSuccess,\n    fetchCollectionsFailure \n} from './shop.actions'\nimport ShopActionTypes from './shop.types'\n\nexport function* fetchCollectionsAsync(){\n    try{\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap =  yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap))\n    } catch (error) {\n        yield put(fetchCollectionsFailure(collectionsMap))\n    }\n\n\n\n  /*   collectionRef\n      .get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message))); */\n\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync\n    );\n}"]},"metadata":{},"sourceType":"module"}